name: Release AgentHub CLI

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Build and Release Binaries

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Run Tests
        run: make test

      - name: Cross Compile
        run: make cross-compile

      - name: Package Binaries
        run: make package-release

      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF##*/v}" >> $GITHUB_ENV

      - name: Checkout homebrew tap repo
        uses: actions/checkout@v4
        with:
          repository: agenthubcli/homebrew-tap
          path: homebrew-tap
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Update Homebrew formula
        run: |
          sha=$(cut -d' ' -f1 release/agenthub-${{ env.VERSION }}-darwin-amd64.zip.sha256)
          sed -i "s|url \".*\"|url \"https://github.com/agenthubcli/agenthub/releases/download/${{ env.VERSION }}/agenthub-${{ env.VERSION }}-darwin-amd64.zip\"|" homebrew-tap/Formula/agenthub.rb
          sed -i "s|sha256 \".*\"|sha256 \"$sha\"|" homebrew-tap/Formula/agenthub.rb

      - name: Commit Homebrew changes
        run: |
          cd homebrew-tap
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Update to ${{ env.VERSION }}"
          git push

      - name: Checkout Scoop bucket repo
        uses: actions/checkout@v4
        with:
          repository: agenthubcli/scoop-agenthub
          path: scoop-agenthub
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Update Scoop manifest
        run: |
          sha=$(cut -d' ' -f1 release/agenthub-${{ env.VERSION }}-windows-amd64.zip.sha256)
          jq ".version = \"${{ env.VERSION }}\" | .url = \"https://github.com/agenthubcli/agenthub/releases/download/${{ env.VERSION }}/agenthub-${{ env.VERSION }}-windows-amd64.zip\" | .hash = \"$sha\"" scoop-agenthub/agenthub.json > scoop-agenthub/agenthub.json.tmp
          mv scoop-agenthub/agenthub.json.tmp scoop-agenthub/agenthub.json

      - name: Commit Scoop changes
        run: |
          cd scoop-agenthub
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Update to ${{ env.VERSION }}"
          git push

      - name: Checkout Chocolatey repo
        uses: actions/checkout@v4
        with:
          repository: agenthubcli/chocolatey
          path: chocolatey
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Update Chocolatey nuspec and installer
        run: |
          cd chocolatey
          sed -i "s|<version>.*</version>|<version>${{ env.VERSION }}</version>|" agenthub.nuspec
          cat <<EOF > tools/chocolateyInstall.ps1
          $$toolsDir = "$$(Split-Path -parent $$MyInvocation.MyCommand.Definition)"
          $$url = "https://github.com/agenthubcli/agenthub/releases/download/${{ env.VERSION }}/agenthub-${{ env.VERSION }}-windows-amd64.zip"
          $$packageName = "agenthub"
          Install-ChocolateyZipPackage -PackageName $$packageName -Url $$url -UnzipLocation $$toolsDir
          EOF

      - name: Commit Chocolatey changes
        run: |
          cd chocolatey
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Update to ${{ env.VERSION }}"
          git push

      - name: Upload Chocolatey package files
        uses: actions/upload-artifact@v4
        with:
          name: chocolatey-package
          path: chocolatey/

  chocolatey-publish:
    needs: release
    runs-on: windows-latest
    name: Publish to Chocolatey

    steps:
      - name: Download Chocolatey package files
        uses: actions/download-artifact@v4
        with:
          name: chocolatey-package
          path: chocolatey/

      - name: Extract version from tag
        run: echo "VERSION=$($env:GITHUB_REF -replace 'refs/tags/v', '')" >> $env:GITHUB_ENV

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Build and Push Chocolatey Package
        run: |
          cd chocolatey
          choco apikey --key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/
          choco pack
          choco push agenthub.${{ env.VERSION }}.nupkg --source https://push.chocolatey.org/
